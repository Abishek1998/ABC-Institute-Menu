<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btngenerateTimetable.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABQAAAAWCAYAAADAQbwGAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EwAACxMBAJqcGAAAAMlJREFUOE9jAIGC9f8Fqtb/z69Y/7+eHAzSW77+vwLYMCDHoHLd//cV6/7/pwSX
        A80oXfXfgAFo2HlsCsjE+xmwCFKEh4mBe67//7/5InY5dEyUgXdfA/Er7HLomH4GgrwINgiIv//6//8b
        EMP4e65h1wPCOA0EhRvIVSAMMhCEYXx84TmEwxAZrz7z//8qIMYmh46JMpAUPBINpGZ5CCxkzzMAi24H
        bJKkYlCpX7bmfwC4Gihf/l8BW11BLAbXKUAzwIZRFzAwAAAfcRNRdBuEQAAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>